---
- name: Include OS-specific tasks
  ansible.builtin.include_tasks: "{{ ansible_os_family | lower }}.yml"

- name: Install Docker
  ansible.builtin.package:
    name:
      - containerd.io
      - "docker-{{ docker_edition }}"
      - "docker-{{ docker_edition }}-cli"
      - "docker-{{ docker_edition }}-rootless-extras"
    state: "{{ 'latest' }}"

- name: Install Docker Compose Plugin
  ansible.builtin.package:
    name:
      - docker-compose-plugin
    state: "{{ 'latest' }}"
  when: docker_compose

- name: Ensure Docker data directory exists
  ansible.builtin.file:
    path: "{{ docker_data_dir }}"
    state: directory
    owner: root
    group: root
    mode: '0710'

- name: Ensure specified users are in the docker group
  ansible.builtin.user:
    name: "{{ item }}"
    groups: docker
    append: true
  with_items: "{{ docker_group_members }}"
  when: docker_group_members | length > 0

- name: Reset SSH connection to apply potential user changes
  ansible.builtin.meta: reset_connection

- name: Ensure Docker configuration directory is present
  ansible.builtin.file:
    path: /etc/docker
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Ensure Docker daemon is configured
  ansible.builtin.template:
    src: 'daemon.json.j2'
    dest: '/etc/docker/daemon.json'
    owner: root
    group: root
    mode: '0644'
    lstrip_blocks: true
    trim_blocks: true
  notify: Restart Docker

- name: Enable Docker service
  ansible.builtin.service:
    name: docker
    enabled: true

- name: Ensure all handlers run before continuing
  ansible.builtin.meta: flush_handlers
